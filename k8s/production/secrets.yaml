apiVersion: v1
kind: Secret
metadata:
  name: mangakai-secrets
  namespace: mangakai-prod
  labels:
    app: mangakai
    environment: production
type: Opaque
stringData:
  # 数据库密码 (需要替换为实际值)
  DATABASE_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # Redis 密码 (需要替换为实际值)
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # Gemini API 密钥 (需要替换为实际值)
  GEMINI_API_KEY: "REPLACE_WITH_ACTUAL_API_KEY"
  
  # AWS 凭证 (需要替换为实际值)
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_ACTUAL_ACCESS_KEY"
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_ACTUAL_SECRET_KEY"
  
  # JWT 密钥 (需要替换为实际值)
  JWT_SECRET_KEY: "REPLACE_WITH_ACTUAL_JWT_SECRET"
  
  # Flower 监控密码 (需要替换为实际值)
  FLOWER_BASIC_AUTH: "admin:REPLACE_WITH_ACTUAL_PASSWORD"

---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-certificates
  namespace: mangakai-prod
  labels:
    app: mangakai
    component: nginx
type: kubernetes.io/tls
data:
  # SSL 证书 (需要替换为实际的 base64 编码证书)
  tls.crt: LS0tLS1CRUdJTi... # REPLACE_WITH_ACTUAL_CERTIFICATE_BASE64
  tls.key: LS0tLS1CRUdJTi... # REPLACE_WITH_ACTUAL_PRIVATE_KEY_BASE64

---
# 用于创建 secrets 的脚本注释
# 使用以下命令创建实际的 secrets:
#
# 1. 创建数据库密码:
# kubectl create secret generic mangakai-db-secret \
#   --from-literal=password=your-secure-password \
#   --namespace=mangakai-prod
#
# 2. 创建 API 密钥:
# kubectl create secret generic mangakai-api-secret \
#   --from-literal=gemini-api-key=your-gemini-api-key \
#   --namespace=mangakai-prod
#
# 3. 创建 AWS 凭证:
# kubectl create secret generic mangakai-aws-secret \
#   --from-literal=access-key-id=your-access-key \
#   --from-literal=secret-access-key=your-secret-key \
#   --namespace=mangakai-prod
#
# 4. 创建 SSL 证书:
# kubectl create secret tls ssl-certificates \
#   --cert=path/to/cert.pem \
#   --key=path/to/key.pem \
#   --namespace=mangakai-prod